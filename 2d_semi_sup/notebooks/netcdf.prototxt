layer {
  name: "labelled_data"
  type: "NetCDFData"
  top: "NetCDFData1"
  netcdf_data_param {
    source: "/project/projectdirs/dasrepo/gordon_bell/deep_learning/networks/climate/2d_semi_sup/image_files.txt"
    variable_data: "PRECT"
    variable_data: "PS"
    variable_data: "PSL"
    variable_data: "QREFHT"
    variable_data: "T200"
    variable_data: "T500"
    variable_data: "TMQ"
    variable_data: "TREFHT"
    variable_data: "TS"
    variable_data: "U850"
    variable_data: "UBOT"
    variable_data: "V850"
    variable_data: "VBOT"
    variable_data: "Z1000"
    variable_data: "Z200"
    variable_data: "ZBOT"
    batch_size: 16
    time_stride: 1
    xdim: 768
    ydim: 768
    crop_index_source: "/project/projectdirs/dasrepo/gordon_bell/deep_learning/networks/climate/2d_semi_sup/crop_indices.txt"
    crop_stride: 32
  }
}
layer {
  name: "data"
  type: "MVN"
  bottom: "NetCDFData1"
  top: "data"
}
layer {
  name: "labelled_data"
  type: "NetCDFData"
  top: "label"
  netcdf_data_param {
    source: "/project/projectdirs/dasrepo/gordon_bell/deep_learning/networks/climate/2d_semi_sup/label_files.txt"
    variable_data: "x_coord"
    variable_data: "y_coord"
    variable_data: "w_coord"
    variable_data: "h_coord"
    variable_data: "obj"
    variable_data: "cls"
    batch_size: 16
    time_stride: 1
    xdim: 24
    ydim: 24
    crop_index_source: "/project/projectdirs/dasrepo/gordon_bell/deep_learning/networks/climate/2d_semi_sup/crop_indices.txt"
  }
}
layer {
  name: "Convolution1"
  type: "Convolution"
  bottom: "data"
  top: "Convolution1"
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "ReLU1"
  type: "ReLU"
  bottom: "Convolution1"
  top: "Convolution1"
}
layer {
  name: "Convolution2"
  type: "Convolution"
  bottom: "Convolution1"
  top: "Convolution2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "ReLU2"
  type: "ReLU"
  bottom: "Convolution2"
  top: "Convolution2"
}
layer {
  name: "Convolution3"
  type: "Convolution"
  bottom: "Convolution2"
  top: "Convolution3"
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "ReLU3"
  type: "ReLU"
  bottom: "Convolution3"
  top: "Convolution3"
}
layer {
  name: "Convolution4"
  type: "Convolution"
  bottom: "Convolution3"
  top: "Convolution4"
  convolution_param {
    num_output: 768
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "ReLU4"
  type: "ReLU"
  bottom: "Convolution4"
  top: "Convolution4"
}
layer {
  name: "Convolution5"
  type: "Convolution"
  bottom: "Convolution4"
  top: "Convolution5"
  convolution_param {
    num_output: 1024
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "encoder"
  type: "ReLU"
  bottom: "Convolution5"
  top: "Convolution5"
}
layer {
  name: "Deconvolution1"
  type: "Deconvolution"
  bottom: "Convolution5"
  top: "Deconvolution1"
  convolution_param {
    num_output: 768
    bias_term: false
    pad: 0
    kernel_size: 5
    group: 1
    stride: 2
  }
}
layer {
  name: "ReLU5"
  type: "ReLU"
  bottom: "Deconvolution1"
  top: "Deconvolution1"
}
layer {
  name: "Crop1"
  type: "Crop"
  bottom: "Deconvolution1"
  bottom: "Convolution4"
  top: "Crop1"
  crop_param {
    axis: 2
    offset: 1
  }
}
layer {
  name: "Deconvolution2"
  type: "Deconvolution"
  bottom: "Crop1"
  top: "Deconvolution2"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 5
    group: 1
    stride: 2
  }
}
layer {
  name: "ReLU6"
  type: "ReLU"
  bottom: "Deconvolution2"
  top: "Deconvolution2"
}
layer {
  name: "Crop2"
  type: "Crop"
  bottom: "Deconvolution2"
  bottom: "Convolution3"
  top: "Crop2"
  crop_param {
    axis: 2
    offset: 1
  }
}
layer {
  name: "Deconvolution3"
  type: "Deconvolution"
  bottom: "Crop2"
  top: "Deconvolution3"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 5
    group: 1
    stride: 2
  }
}
layer {
  name: "ReLU7"
  type: "ReLU"
  bottom: "Deconvolution3"
  top: "Deconvolution3"
}
layer {
  name: "Crop3"
  type: "Crop"
  bottom: "Deconvolution3"
  bottom: "Convolution2"
  top: "Crop3"
  crop_param {
    axis: 2
    offset: 1
  }
}
layer {
  name: "Deconvolution4"
  type: "Deconvolution"
  bottom: "Crop3"
  top: "Deconvolution4"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 5
    group: 1
    stride: 2
  }
}
layer {
  name: "ReLU8"
  type: "ReLU"
  bottom: "Deconvolution4"
  top: "Deconvolution4"
}
layer {
  name: "Crop4"
  type: "Crop"
  bottom: "Deconvolution4"
  bottom: "Convolution1"
  top: "Crop4"
  crop_param {
    axis: 2
    offset: 1
  }
}
layer {
  name: "Deconvolution5"
  type: "Deconvolution"
  bottom: "Crop4"
  top: "Deconvolution5"
  convolution_param {
    num_output: 16
    bias_term: false
    pad: 0
    kernel_size: 5
    group: 1
    stride: 2
  }
}
layer {
  name: "ReLU9"
  type: "ReLU"
  bottom: "Deconvolution5"
  top: "Deconvolution5"
}
layer {
  name: "reconstruction"
  type: "Crop"
  bottom: "Deconvolution5"
  bottom: "data"
  top: "reconstruction"
  crop_param {
    axis: 2
    offset: 1
  }
}
layer {
  name: "gxy"
  type: "Slice"
  bottom: "label"
  top: "gxy"
  top: "gwh"
  top: "gobj"
  top: "gcls"
  slice_param {
    slice_point: 2
    slice_point: 4
    slice_point: 5
  }
}
layer {
  name: "Convolution6"
  type: "Convolution"
  bottom: "Convolution5"
  top: "Convolution6"
  convolution_param {
    num_output: 4
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "class_scores"
  type: "ReLU"
  bottom: "Convolution6"
  top: "Convolution6"
}
layer {
  name: "Convolution7"
  type: "Convolution"
  bottom: "Convolution5"
  top: "Convolution7"
  convolution_param {
    num_output: 2
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "obj_scores"
  type: "ReLU"
  bottom: "Convolution7"
  top: "Convolution7"
}
layer {
  name: "xy_param"
  type: "Convolution"
  bottom: "Convolution5"
  top: "xy_param"
  convolution_param {
    num_output: 2
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "wh_param"
  type: "Convolution"
  bottom: "Convolution5"
  top: "wh_param"
  convolution_param {
    num_output: 2
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "two_d_mask"
  type: "Concat"
  bottom: "gobj"
  bottom: "gobj"
  top: "two_d_mask"
}
layer {
  name: "xy_pred"
  type: "Eltwise"
  bottom: "xy_param"
  bottom: "two_d_mask"
  top: "xy_pred"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "wh_pred"
  type: "Eltwise"
  bottom: "wh_param"
  bottom: "two_d_mask"
  top: "wh_pred"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "xy_gt"
  type: "Eltwise"
  bottom: "gxy"
  bottom: "two_d_mask"
  top: "xy_gt"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "wh_gt"
  type: "Eltwise"
  bottom: "gwh"
  bottom: "two_d_mask"
  top: "wh_gt"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "L_cls"
  type: "SoftmaxWithLoss"
  bottom: "Convolution6"
  bottom: "gcls"
  top: "L_cls"
  loss_param {
    ignore_label: 0
  }
}
layer {
  name: "L_obj"
  type: "SoftmaxWithLoss"
  bottom: "Convolution7"
  bottom: "gobj"
  top: "L_obj"
  loss_param {
    ignore_label: 0
  }
}
layer {
  name: "L_xy"
  type: "SmoothL1Loss"
  bottom: "xy_pred"
  bottom: "xy_gt"
  top: "L_xy"
}
layer {
  name: "L_wh"
  type: "SmoothL1Loss"
  bottom: "wh_pred"
  bottom: "wh_gt"
  top: "L_wh"
}
layer {
  name: "L_rec"
  type: "EuclideanLoss"
  bottom: "reconstruction"
  bottom: "data"
  top: "L_rec"
}
layer {
  name: "final_loss"
  type: "Eltwise"
  bottom: "L_cls"
  bottom: "L_obj"
  bottom: "L_xy"
  bottom: "L_wh"
  bottom: "L_rec"
  top: "final_loss"
  eltwise_param {
    operation: SUM
    coeff: 1.0
    coeff: 1.0
    coeff: 5.0
    coeff: 7.0
    coeff: 1e-05
  }
}
